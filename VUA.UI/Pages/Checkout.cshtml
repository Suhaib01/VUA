@page
@model VUA.UI.Pages.CheckoutModel
@{
    Layout = "/Areas/AppUsers/Views/Shared/_Layout.cshtml";
}

<script src="https://www.paypal.com/sdk/js?client-id=AXIrWWUj7BRR4c8zY1IUwVfVugT3UHlGZZOTN8ky2N21dKh3EhJONZIhQP7EegZISUdXZsSoMH44B-EI&currency=USD"></script>

<div class="container mt-6 mb-4">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <div class="card border-0 shadow">
                <div class="card-header bg-dark text-light">
                    <h3 class="text-center text-light">Payment Details</h3>
                </div>
                <div class="card-body">
                    <form>
                        <div class="form-group">
                            <label for="amount">Course Name</label>
                            <div class="form-control">@Model.courseName</div>
                        </div>
                        <div class="form-group">
                            <label for="amount">Amount</label>
                            <div class="form-control">$ @Model.coursPrice</div>
                        </div>
                        <br />
                        <div id="notification-container"></div>
                        <div id="paypal-button-container"></div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    let paypal_buttons = paypal.Buttons({
        createOrder() {
            return fetch("/Checkout?handler=CreateOrder", {
                method: "POST",
                
            })
                .then((response) => response.json())
                .then((order) => order.id);
        },
        onApprove(data) {
           
            paypal_buttons.close();
            return fetch("/Checkout?handler=CompleteOrder", {
                method: "POST",
                headers:{
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    orderID: data.orderID
                })
            })
            .then((response) => response.json())
            .then((details) => {
                    if(details == "success"){
                        document.getElementById("notification-container").innerHTML=
                            '<div class="alert alert-success" role="alert">Order created successfully</div> <br /> <a href="AppUsers/Dashboard/MyCourse" class="btn btn-success">Done</a>'

                    }
                    else{
                        document.getElementById("notification-container").innerHTML =
                            '<div class="alert alert-danger" role="alert">Failed to create the order!</div> <br /> <a href="AppUsers/Dashboard/MyCourse" class="btn btn-success">Done</a>'
                    }
            });
        },
        onCancel(data) {
            paypal_buttons.close();
            document.getElementById("notification-container").innerHTML =
                '<div class="alert alert-danger" role="alert">Order Canceled</div><br /> <a href="AppUsers/Dashboard/MyCourse" class="btn btn-danger">Close</a>'

            return fetch("/Checkout?handler=CancelOrder", {
                    method:"POST",
                    headers:{
                        "Content-Type":"application/json",
                    },
                    body: JSON.stringify({
                        orderID:data.orderID
                    })
                })
        },
        onError(err) {
            paypal_buttons.close();
            // For example, redirect to a specific error page
            document.getElementById("notification-container").innerHTML =
                '<div class="alert alert-danger" role="alert">Failed to create the order!!!</div><br /> <a href="AppUsers/Dashboard/MyCourse" class="btn btn-success">Done</a>'
        }
    });
    paypal_buttons.render('#paypal-button-container');
</script>

                